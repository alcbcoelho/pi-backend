{
  "openapi": "3.0.3",
  "info": {
    "title": "Playlistenin': crie playlists com suas m√∫sicas favoritas üé∂",
    "description": "API REST com dados de m√∫sicas, playlists e usu√°rios para um aplicativo fict√≠cio de cria√ß√£o de playlists.",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": {
    "name": "users",
    "description": "Dados e opera√ß√µes envolvendo usu√°rios.",
    "name": "users",
    "description": "Dados e opera√ß√µes envolvendo usu√°rios.",
    "name": "users",
    "description": "Dados e opera√ß√µes envolvendo usu√°rios."
  },
  "paths": {
    "/songs": {
      "get": {
        "tags": ["Songs"],
        "summary": "Visualizar lista de m√∫sicas",
        "description": "Retorna um array de objetos com atributos de cada m√∫sica dispon√≠vel. Caso os par√¢metros de consulta (query params) sejam especificados, a(s) m√∫sica(s) retornada(s) √©(s√£o) filtrada(s) de acordo com cada par√¢metro.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Nome da m√∫sica pelo qual se deseja filtrar resultados",
            "required": false
          },
          {
            "name": "artist",
            "in": "query",
            "description": "Nome do artista pelo qual se deseja filtrar resultados",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Indisponibilidade de m√∫sicas cadastradas"
          }
        }
      },
      "post": {
        "tags": ["Songs"],
        "summary": "Inserir nova m√∫sica",
        "description": "Insere uma nova m√∫sica ao array de m√∫sicas dispon√≠veis.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Songs"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "M√∫sica inserida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Songs"
                }
              }
            }
          },
          "400": {
            "description": "Atributos insuficientes"
          }
        }
      }
    },
    "/songs/{id}": {
      "get": {
        "tags": ["Songs"],
        "summary": "Visualizar m√∫sica por ID",
        "description": "Retorna um objeto com atributos da m√∫sica de ID correspondente ao par√¢metro inserido na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da m√∫sica",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "M√∫sica encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Songs"
                }
              }
            }
          },
          "404": {
            "description": "M√∫sica n√£o encontrada"
          }
        }
      },
      "put": {
        "tags": ["Songs"],
        "summary": "Atualizar m√∫sica",
        "description": "Atualiza atributos de m√∫sica de ID correspondente ao par√¢metro especificado na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da m√∫sica",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Songs"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Atributo(s) atualizado(s)"
          },
          "404": {
            "description": "M√∫sica n√£o encontrada"
          }
        }
      },
      "delete": {
        "tags": ["Songs"],
        "summary": "Remover m√∫sica",
        "description": "Remove do array de m√∫sicas a m√∫sica de ID correspondente ao par√¢metro especificado na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da m√∫sica",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "M√∫sica removida",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "<b><span style='color: #ff0000;'>ABBA - Dancing Queen (ID #1)</span></b> removida com sucesso."
                }
              }
            }
          },
          "404": {
            "description": "M√∫sica n√£o encontrada"
          }
        }
      }
    },
    "/playlists": {
      "get": {
        "tags": ["Playlists"],
        "summary": "Visualizar lista de playlists",
        "description": "Retorna um array de objetos com atributos de cada playlist dispon√≠vel.",
        "responses": {
          "200": {
            "description": "Playlist encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Playlists"
                }
              }
            }
          },
          "404": {
            "description": "Indisponibilidade de playlists cadastradas"
          }
        }
      },
      "post": {
        "tags": ["Playlists"],
        "summary": "Criar nova playlist",
        "description": "Insere uma nova playlist ao array de playlists dispon√≠veis.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Playlists"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Playlist inserida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Playlists"
                }
              }
            }
          },
          "400": {
            "description": "Atributos insuficientes"
          }
        }
      }
    },
    "/playlists/{id}": {
      "get": {
        "tags": ["Playlists"],
        "summary": "Visualizar playlist por ID",
        "description": "Retorna um objeto com atributos da playlist de ID correspondente ao par√¢metro inserido na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da playlist",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Playlist encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/Playlists"
                }
              }
            }
          },
          "404": {
            "description": "Playlist n√£o encontrada"
          }
        }
      },
      "put": {
        "tags": ["Playlists"],
        "summary": "Atualizar playlist",
        "description": "Atualiza atributos da playlist de ID correspondente ao par√¢metro especificado na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da playlist",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Playlists"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Atributo(s) atualizado(s)"
          },
          "404": {
            "description": "Playlist n√£o encontrada"
          }
        }
      },
      "delete": {
        "tags": ["Playlists"],
        "summary": "Remover playlist",
        "description": "Remove do array de playlists a playlist de ID correspondente ao par√¢metro especificado na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da playlist",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist removida",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Playlist <b><span style='color: #ff0000;'>Rock Anos 70 (ID #1)</span></b> removida com sucesso."
                }
              }
            }
          },
          "404": {
            "description": "Playlist n√£o encontrada"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Visualizar lista de usu√°rios",
        "description": "Retorna um array de objetos com atributos de cada usu√°rio cadastrado. Caso especificado um nome de usu√°rio como par√¢metro de consulta (query param), √© retornado o objeto associado a este usu√°rio.",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Nome do usu√°rio que se deseja visualizar",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usu√°rios cadastrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Indisponibilidade de usu√°rios cadastrados"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Cadastrar novo usu√°rio",
        "description": "Insere um novo usu√°rio ao array de usu√°rios cadastrados.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usu√°rio inserido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Nome de usu√°rio j√° em uso"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Visualizar usu√°rio por ID",
        "description": "Retorna um objeto com atributos do usu√°rio de ID correspondente ao par√¢metro inserido na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usu√°rio",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Usu√°rio encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "Usu√°rio n√£o encontrado"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Atualizar usu√°rio",
        "description": "Atualiza atributos do usu√°rio de ID correspondente ao par√¢metro especificado na URL.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usu√°rio",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Atributo(s) atualizado(s)"
          },
          "400": {
            "description": "Nome de usu√°rio j√° em uso"
          },
          "404": {
            "description": "Usu√°rio n√£o encontrado"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Remover usu√°rio",
        "description": "Remove do array de usu√°rios cadastrados o usu√°rio de ID correspondente ao par√¢metro especificado na URL",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usu√°rio",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usu√°rio removido",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Usu√°rio de <b><span style='color: #ff0000;'>ID #77</span></b> removido com sucesso."
                }
              }
            }
          },
          "404": {
            "description": "Usu√°rio n√£o encontrado"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Songs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dancing Queen"
          },
          "artist": {
            "type": "string",
            "example": "ABBA"
          }
        }
      },
      "Playlists": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Rock Anos 70"
          },
          "author": {
            "type": "string",
            "example": "/users/1"
          },
          "songs": {
            "type": "string[]",
            "example": [
              "/songs/49",
              "/songs/99",
              "/songs/26",
              "/songs/39",
              "/songs/13",
              "/songs/89",
              "/songs/31",
              "/songs/2",
              "/songs/25",
              "/songs/70",
              "/songs/30",
              "/songs/50"
            ]
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 77
          },
          "username": {
            "type": "string",
            "example": "ShadowWarrior777"
          },
          "password": {
            "type": "string",
            "example": "baleiasazuis123"
          },
          "firstName": {
            "type": "string",
            "example": "Fulano"
          },
          "lastName": {
            "type": "string",
            "example": "de Tal"
          },
          "phone": {
            "type": "string",
            "example": "99237-1991"
          },
          "email": {
            "type": "string",
            "example": "fulanodetal@teste.com"
          }
        }
      }
    }
  }
}
